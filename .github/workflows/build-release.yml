name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering

jobs:
  build-test:
    uses: ./.github/workflows/build-test.yml

  build-release:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for version calculation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile extension
        run: npm run compile

      - name: Generate release version
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          # Get commit count since last tag (or total if no tags)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          # Get short commit SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          # Create release version: x.y.z-build.COMMIT_COUNT+SHORT_SHA
          RELEASE_VERSION="${CURRENT_VERSION}-build.${COMMIT_COUNT}+${SHORT_SHA}"
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "Release version: ${RELEASE_VERSION}"

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Package extension
        run: npx @vscode/vsce package

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ steps.version.outputs.version }}
          name: Build ${{ steps.version.outputs.version }}
          files: '*.vsix'
          generate_release_notes: true
          prerelease: true
          body: |
            Automated build from commit ${{ github.sha }}
            
            This is an automated development build. For stable releases, see version tags.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-vsix-${{ steps.version.outputs.version }}
          path: '*.vsix'
          retention-days: 30
